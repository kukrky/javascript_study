/*우리의 목표

1. 꾸준한 학습 => 웹.
    => 기본적으로 참고하면 정말 괜찮은 사이트(Docs)
    => 정말 작은 프로젝트들을 통해서 웹에 익숙해지자.
    
1번이 정말 익숙해진다면, 본인 주제 선정이나 아니면 다른 코딩 스터디(J2KB.... etc)에 들어가서
다른 사람이랑 프로젝트를 같이 해보는 것

2. Javascript 언어를 통한 Coding Test
    => 가능 하면 매일 한 문제를 풀어보자!
    => 무지성으로 푸는 게 아니라 내가 무슨 알고리즘 공부하는 중이다.
    => 판수충(많이 하면 할수록 문제를 보면 "아 이거 이렇게 푸는거지")

프로그래머스, 또는 대기업의 채용 사이트를 보면 코딩테스트로 인턴, 신입을 뽑는다고 공지
 올라온다. => 여기에 신청을 넣어서 붙는 것!


1차 코딩테스트(only javascript)
2차는 웹 개발 테스트 => 테이블만들고, 정렬 기능 만들고, 검색 기능을 만들어봐라... 
요런 식으로 웹을 3~4시간정도 만들어야 되는 과제가 나온다.
3차로 면접... => 나 코딩 존나 잘해 x , 협업 경험(프로젝트 할때 뭐가 힘들었냐, 
이 프로젝트 다시하면 너 어떻게 하꺼야, 협업을 할 때 뭐가 힘들었냐)

오늘의 목표
 - 필요한 것들 깔기
    - visual studio code (코드를 짤 수 있는 곳)
    - node.js

코딩 테스트 사이트는 무엇이 있을까?

1. 백준
    장점 : 문제 많고 한국 사이트라 익숙한 스멜이 있음
    단점 : javascript를 통한 코딩테스트가 많이 불편해 => 이게 존나게 불편해서 나는 안함.

2. 프로그래머스
    장점 : 아까 위의 백준 단점 해결, 카카오에서 냈던 문제도 있꼬, 그게 아닌 문제도 꽤 많음.
        여기에서 취업도 가능.(실시간 채용 공고), 챌린지(대기업에서 인턴, 신입 뽑는 이벤트 참가
 가능) => 우리가 코테 하는 이유
    단점 : 없는 듯.

3.leetcode
    장점 : 문제 2500개, 문제의 질 괜찮음. 문제 유형 다양함. 구글, 페이스북, 링크드인, 
넷플릭스 풀어볼 수 있음.
    단점 : 다 영어임 ㅇㅇ => 익숙해지면 편하고, 여차하면 papago를 쓰자.

2,3 번을 보자.

아니 시팔 javascript 공부는 어케함

1. MDN (자세히 적혀있음... = > 난이도가 높아.)
2. javascript info


변수 만드는 형식      변수이름           값
let                         sum              = 0;

const, let =>  


const는 값을 최초에 한번만 넣을 수 있고 수정 안됨. (상수)
*/

let array = [1,2,3,4,5];
let str = "김수환";
/*
https://developer.mozilla.org/ko/docs/Web/JavaScript/Guide
*/